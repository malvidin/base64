# The "i" of acronyms like MIME and ASCII are lowercase so they are not highlighted and lowercase
[base64-command]
syntax      = base64 <base64-field> <base64-options>*
shortdesc   = Manipulate data with Base64
description = Encode data to Base64 or to decode data from Base64. \i\\
              "field"   - specify the field containing the data to encode or decode. \i\\
              "action"  - "encode" or "decode" the data (default: "encode"). \i\\
              "mode"    - "replace" the original field or "append" a new field named base64 (default: "replace"). \i\\
              "backslash_escape" - if True, backslash escape non-ASCiI and non-printable characters (default: True). \i\\
              "encoding" - if set, decode output with specified encoding. Falls back to "backslash_escape" if charset is not found, or if a null character is found (default: None). \i\\
              "suppress_error" - if True, do not raise exceptions when decoding (default: False). \i\\
              "recurse" - if True, attempt to decode output recursively (ASCII/Wide only) (default: False). \i\\
              "alphabet" - if 64 characters long (or 65 with padding), decode with custom alphabet (default: None).
usage    = public
related  = mimedecode
comment1 = encode the content of the field url in base64 and replace it.
example1 = | base64 field="url"
comment2 = decode the content of the field ab and store the results into a new field named base64.
example2 = | base64 field="ab" action="decode" mode="append"

[base64-field]
syntax = field=<string>
description = Field to Base64 encode or decode.

[base64-options]
syntax = action=(encode|decode) | mode=(append|replace) | backslash_escape=<bool> | encoding=<string> | suppress_error=<bool> | alphabet=<string> | recurse=<bool>
description = Options for Base64 encoding and decoding.

[mimedecode-command]
syntax      = mimedecode <mimedecode-field> <mimedecode-options>*
    field=<string> (mode=(replace|append))? (suppress_error=(True|False))?
simplesyntax= mimedecode field=<string>
shortdesc   = Decode MiME encoded strings
description = Decode data that is MiME-encoded. \i\\
              "field"   - specify the field containing the data to decode. \i\\
              "mode"    - replace the original field or create a new field named mimedecode (default: replace). \i\\
              "suppress_error" - if True, do not raise exceptions when decoding (default: False).
usage    = public
related  = base64
comment1 = decode the content of the field subject in base64 and replace it.
example1 = | mimedecode field="subject"
comment2 = decode the content of the field ab and store the results into a new field named mimedecode.
example2 = | mimedecode field="ab" mode="append"

[mimedecode-field]
syntax = field=<string>
description = Field that is MiME encoded.

[mimedecode-options]
syntax = mode=(append|replace) | suppress_error=<bool>
description = Options for MiME decoding.
